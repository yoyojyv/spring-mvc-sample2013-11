<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
">

  <!-- ========================= DATASOURCE DEFINITION ========================= -->

  <!--
    spring profile 기능을 이용하여 데이터 소스들을 지정함
    밑의 링크를 참조
    http://arawn.github.io/blog/2012/12/04/spring-environment-profiles-initialization/
  -->

  <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
  <!-- (in this case, JDBC-related settings for the dataSource definition below) -->
  <!--
  <context:property-placeholder location="classpath:config/data-access.properties" system-properties-mode="OVERRIDE"/>
  -->

  <!-- DataSource configuration for the tomcat jdbc connection pool
  See here for more details on commons-dbcp versus tomcat-jdbc:
  http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/
  -->
  <!--
  <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
        p:driverClassName="${jdbc.driverClassName}" p:url="${jdbc.url}"
        p:username="${jdbc.username}" p:password="${jdbc.password}"/>
  -->

  <!-- 개발자 local 설정 -->
  <beans profile="dev">
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/test"
          p:username="root"
          p:password="1234"/>
  </beans>

  <!-- 테스트 서버 설정 -->
  <beans profile="test">
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/test"
          p:username="root"
          p:password="jy4680"/>
  </beans>

  <!-- 실제 운영 서버 설정 -->
  <beans profile="prod">
    <bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
          p:driverClassName="com.mysql.jdbc.Driver"
          p:url="jdbc:mysql://localhost:3306/test"
          p:username="root"
          p:password=""/>
  </beans>


  <!-- 초기에 데이터베이스의 구조나 내역을 넣어주고 싶은 경우 다음과 같이 이용하면 됨 -->
  <!-- Database initializer. If any of the script fails, the initialization stops. -->
  <!-- As an alternative, for embedded databases see <jdbc:embedded-database/>. -->
  <!--
  <jdbc:initialize-database data-source="dataSource">
    <jdbc:script location="${jdbc.initLocation}"/>
    <jdbc:script location="${jdbc.dataLocation}"/>
  </jdbc:initialize-database>
  -->

  <!-- jndi 이용하여 데이터소스를 가져오는 경우 -->
  <!--
  <beans profile="javaee" >  -->
    <!-- JNDI DataSource for JEE environments -->
  <!--
    <jee:jndi-lookup id="dataSource" jndi-name="java:comp/env/jdbc/petclinic"/>
  </beans> -->

</beans>